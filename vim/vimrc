" Note: Skip initialization for vim-tiny or vim-small.
if !1 | finish | endif

if has('vim_starting')
  set nocompatible
  " Required:
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

" Required:
call neobundle#rc(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'

call neobundle#end()

if has('mac')
  if exists('$LANG') && $LANG ==# 'ja_JP.UTF-8'
    set langmenu=ja_ja.utf-8.macvim
    set encoding=utf-8
    set ambiwidth=double
  endif
endif

NeoBundle 'Shougo/neocomplete'

NeoBundle 'scrooloose/syntastic'
let g:syntastic_mode_map = { 
\'mode': 'passive',
\'active_filetypes': ["coffee", "javascript", "json", "go"] 
\ }
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_python_checkers = ['pep8']

NeoBundle 'vim-scripts/yanktmp.vim'
map <silent> sy :call YanktmpYank()<cr>
map <silent> sp :call YanktmpPaste_p()<cr>
map <silent> sP :call YanktmpPaste_P()<cr>

NeoBundle 'mattn/benchvimrc-vim'
NeoBundle 'kchmck/vim-coffee-script'
NeoBundle 'fatih/vim-go'

" NeoBundle 'derekwyatt/vim-scala'
" NeoBundle 'othree/html5.vim'
" NeoBundle 'gre/play2vim'
" NeoBundle 'vim-jp/cpp-vim'
" let g:syntastic_c_include_dirs=['/usr/local/Cellar/groonga/4.0.1/include/groonga']
" NeoBundle 'altercation/vim-colors-solarized'
" NeoBundle 'mxw/vim-jsx'

filetype plugin indent on

" Installation check.
NeoBundleCheck

" Brief help
" :NeoBundleList          - list configured bundles
" :NeoBundleInstall(!)    - install(update) bundles
" :NeoBundleClean(!)      - confirm(or auto-approve) removal of unused bundles

syntax enable

" Do not make a backup before overwriting a file.
set nobackup                      
set nowritebackup                 

set noswapfile

" 編集中のファイル名を表示
" 画面の左側に常時''行番''を表示する。
" ルーラーを表示する。
set title
set number
set ruler

" タブの見掛けの表示幅を4文字分にする。
" オートインデント時に使用するインデントの深さも4文字分にする。
" 自身がタブを入力時した際に、タブの代わりに4文字の半角スペースに置き換える
" タブを発見した場合は印つける
set tabstop=4
set shiftwidth=4 
set softtabstop=4
set list
set listchars=tab:>-

"autocmd FileType coffee, javascript and json setl autoindent
autocmd FileType coffee setl tabstop=2 expandtab shiftwidth=2 softtabstop=2
autocmd FileType javascript setl tabstop=2 expandtab shiftwidth=2 softtabstop=2
autocmd FileType json setl tabstop=2 expandtab shiftwidth=2 softtabstop=2

" タブが挿入された文章を編集する場合、タブの代わりに半角スペースに置き換えるようにする。
" 行頭の余白内でTabを打ち込むと shiftwidth の数だけインデントする。
set expandtab
set smarttab

" インクリメンタルサーチ
set incsearch

" 対括弧の表示
" モード表示
set showmatch
set showmode

" 全角スペースを視覚化する
highlight ZenkakuSpace cterm=underline ctermfg=lightblue guibg=white
match ZenkakuSpace /　/

" insert mode ではキーバインドをEmacs スタイルにする。
inoremap <C-A> <Home>
inoremap <C-B> <Left>
inoremap <C-D> <Del>
inoremap <C-E> <End>
inoremap <C-F> <Right>

" コマンドエイリアス
" ^MはCtrl+v,Ctrl+m
" noremap ,h :! jshint %<cr>
" noremap ,t :! prove -vl %<cr>
noremap ,pt  :!perltidy %<cr>
noremap ,ptv :'<,'>!perltidy<cr>
noremap ,js  :call JsBeautify()<cr>

" 日時の入力補助
:inoremap <expr> ,df strftime('%Y-%m-%dT%H:%M:%S')
:inoremap <expr> ,dd strftime('%Y-%m-%d')
:inoremap <expr> ,dt strftime('%H:%M:%S')

" コロンを識別子の有効な一部として認識させる
set iskeyword+=:

" Don't screw up folds when inserting text that might affect them, until
" leaving insert mode. Foldmethod is local to the window. Protect against
" screwing up folding when switching between windows.
autocmd InsertEnter * if !exists('w:last_fdm') | let w:last_fdm=&foldmethod | setlocal foldmethod=manual | endif
autocmd InsertLeave,WinLeave * if exists('w:last_fdm') | let &l:foldmethod=w:last_fdm | unlet w:last_fdm | endif

" press both space and . key
nnoremap <Space>. :<C-u>tabedit $MYVIMRC<CR>

