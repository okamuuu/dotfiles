#source "$HOME/.zshrc"
export PATH=/usr/local/bin:/usr/local/sbin:$PATH

export LANG="ja_JP.UTF-8"

HISTFILE="$HOME/.zsh-history"
HISTSIZE=10000
SAVEHIST=10000

autoload -U compinit
compinit

autoload -U colors
colors

export PROMPT="%n%# "

limit coredumpsize 1024

unsetopt promptcr

setopt prompt_subst

setopt nobeep

setopt long_list_jobs

setopt list_types

setopt auto_resume

setopt auto_list

setopt hist_ignore_dups

setopt auto_pushd

setopt pushd_ignore_dups

#setopt extended_glob

setopt auto_menu

setopt extended_history

setopt equals

setopt magic_equal_subst

setopt hist_verify

setopt numeric_glob_sort

setopt print_eight_bit

setopt share_history

zstyle ':completion:*:default' menu select=1

zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}

setopt auto_param_keys

setopt auto_param_slash

autoload -Uz VCS_INFO_get_data_git; VCS_INFO_get_data_git 2> /dev/null

if [[ -x `which colordiff` ]]; then
  alias diff='colordiff -u'
else
  alias diff='diff -u'
fi

#for screen hard status
case "${TERM}" in
kterm*|xterm*)
    precmd() {
        printf "\e]0;${USER}@${HOST%%.*}:${PWD}\a"
    }
    ;;
screen*|ansi*)
    preexec() {
        local -a cmd; cmd=(${(z)2})
        if test $cmd[2]; then
#            printf "\ek$(basename $cmd[2])\e\\"
            printf "\ek!$1\e\\"
        fi
    }
    precmd() {
        #printf "\eP\e]0;~$(basename $(pwd))\a\e\\"
        printf "\ek$(basename $(pwd))\e\\"
    }
    ;;
esac


function rprompt-git-current-branch {
        local name st color gitdir action
        if [[ "$PWD" =~ '/\.git(/.*)?$' ]]; then
                return
        fi
        name=`git branch 2> /dev/null | grep '^\*' | cut -b 3-`
        if [[ -z "$name" ]]; then
                return
        fi

        gitdir=`git rev-parse --git-dir 2> /dev/null`
        action=`VCS_INFO_git_getaction "$gitdir"` && action="($action)"

        # for virtual machine
        if [[ -n `whoami | grep "vagrant"` ]]; then 
            color=%F{white}
            echo "$color$name$action%f%b "
            return
        fi  

        st=`git status 2> /dev/null`
        if [[ -n `echo "$st" | grep "^nothing to"` ]]; then
                color=%F{green}
        elif [[ -n `echo "$st" | grep "^nothing added"` ]]; then
                color=%F{yellow}
        elif [[ -n `echo "$st" | grep "^# Untracked"` ]]; then
                color=%B%F{red}
        else
                 color=%F{red}
         fi
              
        echo "$color$name$action%f%b "
}

setopt prompt_subst

RPROMPT='[`rprompt-git-current-branch`%~]'

export SSH_AUTH_SOCK=$(launchctl getenv SSH_AUTH_SOCK)

bindkey -d
bindkey -e
